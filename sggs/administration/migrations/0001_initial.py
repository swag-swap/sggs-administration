# Generated by Django 4.2.11 on 2024-04-17 12:26

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_student', models.IntegerField(default=-1)),
                ('is_teacher', models.IntegerField(default=-1)),
                ('is_administrator', models.IntegerField(default=-1)),
                ('profile_photo', models.ImageField(blank=True, null=True, upload_to='profile_photos/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ClassSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('active', models.BooleanField(default=True)),
                ('attendence_active', models.BooleanField(default=False)),
                ('total_active_days', models.IntegerField(default=0)),
                ('attendence_table_name', models.CharField(blank=True, max_length=255)),
                ('result_table_name', models.CharField(blank=True, max_length=255)),
                ('response_table_name', models.CharField(blank=True, max_length=255)),
                ('test_table_name', models.CharField(blank=True, max_length=255)),
                ('test_questions_table_name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(default=datetime.datetime(2024, 4, 17, 12, 31, 23, 247901, tzinfo=datetime.timezone.utc))),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('subjects_question_table_name', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='question/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departments', models.ManyToManyField(default=None, related_name='teachers', to='administration.department')),
                ('subjects', models.ManyToManyField(default=None, related_name='teacher_subject', to='administration.subject')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_no', models.CharField(max_length=20)),
                ('year', models.IntegerField()),
                ('roll_number', models.CharField(default='', max_length=20)),
                ('date_of_birth', models.DateField(default='2000-01-01')),
                ('address', models.TextField(default='')),
                ('contact_number', models.CharField(default='', max_length=15)),
                ('department', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_department', to='administration.department')),
                ('semester', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_semester', to='administration.semester')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification_type', models.IntegerField(choices=[(1, 'Teacher Profile Update'), (2, 'New Teacher Request'), (3, 'New Student Enrollment'), (4, 'Fee Payment Reminder'), (5, 'Class Session'), (6, 'Exam Schedule'), (7, 'Attendance'), (8, 'Assignment Submission'), (9, 'Grading'), (10, 'System Maintenance')])),
                ('for_student', models.BooleanField(default=False)),
                ('for_administrator', models.BooleanField(default=False)),
                ('for_teacher', models.BooleanField(default=False)),
                ('administrator', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='administrator_notification', to='administration.administrator')),
                ('session', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='session_notification', to='administration.classsession')),
                ('student', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_notification', to='administration.student')),
                ('teacher', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teacher_notification', to='administration.teacher')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year_1_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('year_2_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('year_3_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('year_4_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fee', to='administration.student')),
            ],
        ),
        migrations.AddField(
            model_name='classsession',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.department'),
        ),
        migrations.AddField(
            model_name='classsession',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.semester'),
        ),
        migrations.AddField(
            model_name='classsession',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.subject'),
        ),
        migrations.AddField(
            model_name='classsession',
            name='teacher',
            field=models.ManyToManyField(related_name='session_teachers', to='administration.teacher'),
        ),
        migrations.AddField(
            model_name='administrator',
            name='departments',
            field=models.ManyToManyField(default=None, related_name='administrators', to='administration.department'),
        ),
        migrations.AddField(
            model_name='administrator',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='administrator_profile', to=settings.AUTH_USER_MODEL),
        ),
    ]
